<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap
			PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"
			"http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="memberTest">
<!-- 
	이 영역에 SQL문에 맞는 태그를 사용하여 SQL문을 작성한다.
	
	사용할 수 있는 기본적인 태그들
	<select> ~~~ </select>
	<insert> ~~~ </insert>
	<update> ~~~ </update>
	<delete> ~~~ </delete>
	
	위 태그에서 사용되는 속성들
	
	1) id속성 : 해당 태그를 호출할 때 <sqlMap>태그의 namespace와 연결하여 사용하는 이름.
	2) parameterClass속성 : SQL문에 사용될 데이터가 들어있는 객체를 지정한다.
						  (보통 VO클래스, 자바의 자료형이름 등이 사용된다.)
						  (typeAlias로 지정한  alias명을 사용할 수 있다.)
	3) resultClass속성 : select문을 실행한 결과를 담을 객체를 지정한다.
						(보통 VO클래스나 자바의 자료형이름을 사용한다.)
	4) resultMap속성 : 결과 레코드 컬럼명과 VO객체의 property명이 다를 경우에
					   적절한 매핑을 위해 사용한다.
 -->

<insert id="insertMember" parameterClass="kr.or.ddit.member.vo.MemberVO">
INSERT INTO mymember
(mem_id,mem_name,mem_tel,mem_addr)
VALUES (#memId#, #memName#, #memTel#, #memAddr#)
</insert>

<update id="updateMember" parameterClass="kr.or.ddit.member.vo.MemberVO">
 UPDATE mymember   
 	SET mem_name = #memName#, 
 		mem_tel = #memTel#, 
 		mem_addr= #memAddr#  
  WHERE mem_id = #memId# 
</update>

<delete id="deleteMember" parameterClass="String">
 DELETE FROM mymember WHERE mem_id = #memId#  <!-- ## 속성이름이 ##안에있는것을 꺼네와라 -->  
</delete>

<resultMap id="memMap" class="kr.or.ddit.member.vo.MemberVO">
	<result property="memId" column="mem_id" />
	<result property="memName" column="mem_name" />
	<result property="memTel" column="mem_tel" />
	<result property="memAddr" column="mem_addr" />
</resultMap>

<select id="getMemberAll"  resultMap="memMap"> 
	select * from mymember
</select>

<!-- <select id="getMemberAll" resultClass="kr.or.ddit.member.vo.MemberVO" >  -->
<!--  SELECT mem_id as memId, -->
<!--  		mem_name as memName, -->
<!--  		mem_tel memTel,  as생략가능 -->
<!--  		mem_addr memAddr	 -->
<!--    FROM mymember -->
<!-- </select> -->

<select id="getMember" parameterClass="String" resultMap="memMap">
	select * from mymember where mem_id = #memId#
</select>

<select id="checkMember" parameterClass="String" resultClass="int">
	 select count(*) as cnt from mymember
	  where mem_ids = #memId#
</select>

<select id="searchMember" parameterClass="memVO" resultClass="memMap">
	select * from mymember where 1=1 ";
	<isNotEmpty property="memId">
		and mem_id = #memId#
	</isNotEmpty>
	<isNotEmpty property="memName">
		and mem_name = #memName#
	</isNotEmpty>	         
	<isNotEmpty property="memTel">
		and mem_tel = #memTel#
	</isNotEmpty>	         
	<isNotEmpty property="memAddr">
		and mem_addr like '%' || #memAddr# || '%'
	</isNotEmpty>	         
		         
<!-- 	select * from mymember where 1=1 "; -->
<!-- 	if(mv.getMemId() != null&& !mv.getMemId().equals("")) {  //무조건 널값부터 체크 안하면 널포인트이셉션 발생 -->
<!-- 		sql += " and mem_id = ? "; -->
<!-- 	} -->
<!-- 	if(mv.getMemName() != null&& !mv.getMemName().equals("")) { -->
<!-- 	    sql += " and mem_name = ? "; -->
<!-- 	} -->
<!-- 	if(mv.getMemTel() != null&& !mv.getMemTel().equals("")) { -->
<!-- 	    sql += " and mem_tel = ? "; -->
<!-- 	} -->
<!-- 	if(mv.getMemAddr() != null&& !mv.getMemAddr().equals("")) { -->
<!-- 	    sql += " and mem_addr like '%' || ? || '%' "; -->
<!-- 	} -->
	
</select>

</sqlMap>			






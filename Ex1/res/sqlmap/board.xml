<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap
         PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"
         "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="board">   

      
<!-- 
   이 영영에 SQL문에 맞는 태그를 사용하여 SQL문을 작성한다.
   
   사용할 수 있는 기본적인 태그들
   <select> ~~~ </select>
   <insert> ~~~ </insert>
   <update> ~~~ </update>
   <delete> ~~~ </delete>
   
   위 태그에 사용되는 속성들
   
   1) id속성 : 해당 태그를 호출할 때 <sqlMap> 태그의 namespace와 연결하여
              사용하는 이름.
   2) parameterClass속성: SQL문에 사용될 데이터가 들어있는 객체를 지정한다.
                     (보통 VO클래스, 자바의 자료형이름 등이 사용된다.)
                     (typeAlias로 지정한 alias명을 사용할 수 있다.)
   3) resultClass속성: select문을 실행한 결과를 담을 객체를 지정한다.
               (보통 VO클래스나 자바의 자료형이름을 사용한다.)
   4) resultMap속성: 결과 레코드 컬럼명과 VO객체의 property명이 다를 경우에 
                                     적절한 매핑을 위해 사용한다.
 -->
 
     
<resultMap id="boardMap" class="homework.BoardVO">
   <result property="boardNo" column="board_no"/>
   <result property="boardTitle" column="board_title"/>
   <result property="boardWriter" column="board_writer"/>
   <result property="boardDate" column="board_date"/>
   <result property="boardContent" column="board_content"/>
</resultMap>


<!-- 2-1. 게시판 보기 -->
<!-- <select id="getBoardAll" resultMap="boardMap">    -->
<!--    select * from jdbc_board  -->
 
<!--  </select> -->
<!--  2-2. 게시판 보기   -->
<select id="getBoardAll" resultMap="boardMap">  
   select board_no 
         ,board_title 
         ,board_writer 
         ,board_date 
         ,board_content
   from jdbc_board
   
</select>


<!-- 3. 새 글 작성 -->
<insert id="insertBoard" parameterClass="homework.BoardVO">  
   
    INSERT INTO jdbc_board 
   (board_no, board_title, board_writer, board_date,board_content)
     VALUES (BOARD_SEQ.NEXTVAL, #boardTitle#, #boardWriter#, sysdate,#boardContent#)


</insert>

<!-- 4. 글 수정(작성자명) -->
<update id="updateBoard" parameterClass="homework.BoardVO">

   UPDATE jdbc_board
   SET board_title = #boardTitle#
   ,board_date = sysdate 
   ,board_content = #boardContent# 
   WHERE board_no = #boardNo# 

</update>

<!-- 5. 글 삭제(작성자명) -->
<delete id = "deleteBoard" parameterClass="String">

   DELETE jdbc_board where board_no= #boardNo#
   
</delete>



<select id="checkBoard" parameterClass="String" resultClass="int">  <!-- count 이기 때문에 int -->

  select count(*) as cnt from jdbc_board
where board_no = #boardNo#

</select>

<!-- 6-1. 글 검색(작성자명) -->
<!-- <select id="searchBoard" parameterClass="String" resultMap="boardMap"> -->
<!-- 	SELECT * FROM JDBC_BOARD WHERE BOARD_WRITER = #boardWriter# -->
<!-- </select> -->

<!-- 6-2. 글 검색(글NO) -->
<!-- <select id="searchBoard" parameterClass="homework.BoardVO" resultMap="boardMap"> -->
<!-- 	SELECT * FROM JDBC_BOARD WHERE BOARD_NO = #boardNo# -->
<!-- </select> -->


<!-- 6-3. 글 검색(다이나믹쿼리) -->
<select id="searchBoard" parameterClass="boardVO"
     resultMap="boardMap">
     
  select *
  from jdbc_board
  where 1=1
  
  <isNotEmpty property="boardNo">
       and board_no = #boardNo# 
  </isNotEmpty>
  
  <isNotEmpty property="boardTitle">
      and board_title = #boardTitle#
  </isNotEmpty>
  
  <isNotEmpty property="boardWriter">
      and board_writer = #boardWriter#
  </isNotEmpty>
         
  <isNotEmpty property="boardContent">
      and board_content like '%' || #boardContent# || '%'
  </isNotEmpty>
   
</select>


</sqlMap>   